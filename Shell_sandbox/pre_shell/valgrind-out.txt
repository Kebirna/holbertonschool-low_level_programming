==463== Memcheck, a memory error detector
==463== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==463== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==463== Command: ./a.out
==463== Parent PID: 4072
==463== 
--463-- 
--463-- Valgrind options:
--463--    --leak-check=full
--463--    --show-leak-kinds=all
--463--    --track-origins=yes
--463--    --verbose
--463--    --log-file=valgrind-out.txt
--463-- Contents of /proc/version:
--463--   Linux version 5.3.0-46-generic (buildd@lcy01-amd64-013) (gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)) #38~18.04.1-Ubuntu SMP Tue Mar 31 04:17:56 UTC 2020
--463-- 
--463-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--463-- Page sizes: currently 4096, max supported 4096
--463-- Valgrind library directory: /snap/valgrind/46/usr/lib/valgrind
--463-- Reading syms from /home/juanfe/projects/ricardo/holbertonschool-low_level_programming/Shell_sandbox/pre_shell/a.out
--463-- Reading syms from /lib/x86_64-linux-gnu/ld-2.27.so
--463--   Considering /lib/x86_64-linux-gnu/ld-2.27.so ..
--463--   .. CRC mismatch (computed 1b7c895e wanted 2943108a)
--463--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.27.so ..
--463--   .. CRC is valid
--463-- Reading syms from /snap/valgrind/46/usr/lib/valgrind/memcheck-amd64-linux
--463--    object doesn't have a dynamic symbol table
--463-- Warning: inlined fn name without absori
--463-- is shown as UnknownInlinedFun
--463-- Scheduler: using generic scheduler lock implementation.
--463-- Reading suppressions file: /snap/valgrind/46/usr/lib/valgrind/default.supp
==463== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-463-by-juanfe-on-???
==463== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-463-by-juanfe-on-???
==463== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-463-by-juanfe-on-???
==463== 
==463== TO CONTROL THIS PROCESS USING vgdb (which you probably
==463== don't want to do, unless you know exactly what you're doing,
==463== or are doing some strange experiment):
==463==   /snap/valgrind/46/usr/lib/valgrind/../../bin/vgdb --pid=463 ...command...
==463== 
==463== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==463==   /path/to/gdb ./a.out
==463== and then give GDB the following command
==463==   target remote | /snap/valgrind/46/usr/lib/valgrind/../../bin/vgdb --pid=463
==463== --pid is optional if only one valgrind process is running
==463== 
--463-- REDIR: 0x401f2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x581b855e (vgPlain_amd64_linux_REDIR_FOR_strlen)
--463-- REDIR: 0x401f0d0 (ld-linux-x86-64.so.2:index) redirected to 0x581b8578 (vgPlain_amd64_linux_REDIR_FOR_index)
--463-- Reading syms from /snap/valgrind/46/usr/lib/valgrind/vgpreload_core-amd64-linux.so
--463-- Reading syms from /snap/valgrind/46/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==463== WARNING: new redirection conflicts with existing -- ignoring it
--463--     old: 0x0401f2f0 (strlen              ) R-> (0000.0) 0x581b855e vgPlain_amd64_linux_REDIR_FOR_strlen
--463--     new: 0x0401f2f0 (strlen              ) R-> (2007.0) 0x04c33100 strlen
--463-- REDIR: 0x401d360 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c341b0 (strcmp)
--463-- REDIR: 0x401f830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c37af0 (mempcpy)
--463-- Reading syms from /lib/x86_64-linux-gnu/libc-2.27.so
--463--   Considering /lib/x86_64-linux-gnu/libc-2.27.so ..
--463--   .. CRC mismatch (computed b1c74187 wanted 042cc048)
--463--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.27.so ..
--463--   .. CRC is valid
--463-- REDIR: 0x4edbc70 (libc.so.6:memmove) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edad40 (libc.so.6:strncpy) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbf50 (libc.so.6:strcasecmp) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4eda790 (libc.so.6:strcat) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edad70 (libc.so.6:rindex) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edd7c0 (libc.so.6:rawmemchr) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4efa410 (libc.so.6:wmemchr) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbde0 (libc.so.6:mempcpy) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbc10 (libc.so.6:bcmp) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edad00 (libc.so.6:strncmp) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4eda800 (libc.so.6:strcmp) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbd40 (libc.so.6:memset) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4ef90f0 (libc.so.6:wcschr) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edaca0 (libc.so.6:strnlen) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4eda870 (libc.so.6:strcspn) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbfa0 (libc.so.6:strncasecmp) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4eda840 (libc.so.6:strcpy) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edc0e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4efb6c0 (libc.so.6:wcsnlen) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edada0 (libc.so.6:strpbrk) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4eda7c0 (libc.so.6:index) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edac70 (libc.so.6:strlen) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4ee56c0 (libc.so.6:memrchr) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbff0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbbe0 (libc.so.6:memchr) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4ef9eb0 (libc.so.6:wcslen) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edb050 (libc.so.6:strspn) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbf20 (libc.so.6:stpncpy) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edbef0 (libc.so.6:stpcpy) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edd7f0 (libc.so.6:strchrnul) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4edc040 (libc.so.6:strncasecmp_l) redirected to 0x4a2a770 (_vgnU_ifunc_wrapper)
--463-- REDIR: 0x4fcb3c0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32a80 (rindex)
--463-- REDIR: 0x4ed4070 (libc.so.6:malloc) redirected to 0x4c2fe0f (malloc)
--463-- REDIR: 0x4fc7420 (libc.so.6:__memchr_avx2) redirected to 0x4c34250 (memchr)
--463-- REDIR: 0x4fcbad0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x4c36bb0 (memmove)
--463-- REDIR: 0x4fc7300 (libc.so.6:__strspn_sse42) redirected to 0x4c37f50 (strspn)
--463-- REDIR: 0x4fc7070 (libc.so.6:__strcspn_sse42) redirected to 0x4c37e90 (strcspn)
--463-- REDIR: 0x4fcb590 (libc.so.6:__strlen_avx2) redirected to 0x4c33040 (strlen)
--463-- REDIR: 0x4fa6d60 (libc.so.6:__strcmp_ssse3) redirected to 0x4c34070 (strcmp)
--463-- REDIR: 0x4ed4950 (libc.so.6:free) redirected to 0x4c30f09 (free)
==463== Invalid read of size 8
==463==    at 0x10924A: freedom (freedom.c:21)
==463==    by 0x10967D: _interactive (_interactive.c:30)
==463==    by 0x109B3C: main (rprompt.c:20)
==463==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==463== 
==463== 
==463== Process terminating with default action of signal 11 (SIGSEGV)
==463==  Access not within mapped region at address 0x0
==463==    at 0x10924A: freedom (freedom.c:21)
==463==    by 0x10967D: _interactive (_interactive.c:30)
==463==    by 0x109B3C: main (rprompt.c:20)
==463==  If you believe this happened as a result of a stack
==463==  overflow in your program's main thread (unlikely but
==463==  possible), you can try to increase the size of the
==463==  main thread stack using the --main-stacksize= flag.
==463==  The main thread stack size used in this run was 8388608.
==463== 
==463== HEAP SUMMARY:
==463==     in use at exit: 120 bytes in 1 blocks
==463==   total heap usage: 4 allocs, 3 frees, 1,165 bytes allocated
==463== 
==463== Searching for pointers to 1 not-freed blocks
==463== Checked 71,584 bytes
==463== 
==463== 120 bytes in 1 blocks are still reachable in loss record 1 of 1
==463==    at 0x4C2FE96: malloc (vg_replace_malloc.c:309)
==463==    by 0x4EBCB8B: getdelim (iogetdelim.c:62)
==463==    by 0x1095DE: _interactive (_interactive.c:17)
==463==    by 0x109B3C: main (rprompt.c:20)
==463== 
==463== LEAK SUMMARY:
==463==    definitely lost: 0 bytes in 0 blocks
==463==    indirectly lost: 0 bytes in 0 blocks
==463==      possibly lost: 0 bytes in 0 blocks
==463==    still reachable: 120 bytes in 1 blocks
==463==         suppressed: 0 bytes in 0 blocks
==463== 
==463== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==463== 
==463== 1 errors in context 1 of 1:
==463== Invalid read of size 8
==463==    at 0x10924A: freedom (freedom.c:21)
==463==    by 0x10967D: _interactive (_interactive.c:30)
==463==    by 0x109B3C: main (rprompt.c:20)
==463==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==463== 
==463== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
